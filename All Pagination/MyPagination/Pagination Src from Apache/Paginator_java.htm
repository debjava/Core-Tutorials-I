<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0195)http://www.google.com/codesearch?hl=en&q=show:YSTg8aeFvE8:W1qIJ5okBqo:g0DoBfPF8Kg&sa=N&ct=rd&cs_p=http://svn.jahia.org/svn/jahia/trunk&cs_f=core/src/java/org/jahia/utils/pagination/Paginator.java -->
<HTML><HEAD><TITLE>core/src/java/org/jahia/utils/pagination/Paginator.java - Google Code Search</TITLE>
<META http-equiv=content-type content="text/html; charset=UTF-8">
<STYLE>BODY {
	MARGIN: 3px 8px 8px; COLOR: black; FONT-FAMILY: Arial, sans-serif; BACKGROUND-COLOR: white
}
.j {
	BORDER-RIGHT: silver 1px solid; PADDING-RIGHT: 0.5em; BORDER-TOP: silver 1px solid; MARGIN-TOP: 4px; PADDING-LEFT: 0.5em; MARGIN-BOTTOM: 4px; PADDING-BOTTOM: 0.5em; BORDER-LEFT: silver 1px solid; WIDTH: 85%; COLOR: #222; PADDING-TOP: 0.5em; BORDER-BOTTOM: silver 1px solid; BACKGROUND-COLOR: #f5f5f5; WORD-WRAP: break-word
}
#title {
	PADDING-RIGHT: 0px; BORDER-TOP: #36c 1px solid; PADDING-LEFT: 3px; PADDING-BOTTOM: 1px; MARGIN: 5px 0px 0px; PADDING-TOP: 1px; BACKGROUND-COLOR: #e5ecf9
}
.expl {
	FONT-SIZE: small; MARGIN-LEFT: 2em; MARGIN-RIGHT: 2em
}
.f {
	FONT-SIZE: small; MARGIN-BOTTOM: 1.5em
}
.hl {
	FONT-WEIGHT: bold; COLOR: #000
}
.h {
	MARGIN-TOP: 1em; MARGIN-BOTTOM: 0px
}
.k {
	BACKGROUND-COLOR: #36c
}
.a {
	FONT-SIZE: small; COLOR: green
}
.a A {
	FONT-SIZE: small; COLOR: green
}
A:active {
	COLOR: #f00
}
A:link {
	COLOR: #00c
}
A:visited {
	COLOR: #551a8b
}
A.s {
	FONT-SIZE: small; COLOR: #77c
}
.s A {
	FONT-SIZE: small; COLOR: #77c
}
.a {
	FONT-SIZE: small; COLOR: green
}
.a A {
	FONT-SIZE: small; COLOR: green
}
.i {
	FONT-SIZE: small; COLOR: #a90a08
}
.i:link {
	FONT-SIZE: small; COLOR: #a90a08
}
.n .i {
	FONT-WEIGHT: bold; FONT-SIZE: 10pt
}
.n A {
	FONT-SIZE: 10pt; COLOR: #000
}
.b A {
	FONT-WEIGHT: bold; FONT-SIZE: 12pt; COLOR: #00c
}
CODE {
	FONT-SIZE: 100%; COLOR: #007000; FONT-FAMILY: "bogus font here",monospace
}
CODE.fn {
	FONT-SIZE: 100%; COLOR: #007000; FONT-FAMILY: "bogus font here",monospace
}
DIV.n {
	MARGIN-TOP: 1ex
}
IMG {
	BORDER-RIGHT: 0px; BORDER-TOP: 0px; BORDER-LEFT: 0px; BORDER-BOTTOM: 0px
}
.chl {
	BACKGROUND: #ffa
}
.cchl {
	BACKGROUND: #aff
}
.cc {
	COLOR: #060
}
.input_table TR TD {
	VERTICAL-ALIGN: top
}
</STYLE>

<SCRIPT type=text/javascript>
<!--
function sf(){}
// --></SCRIPT>

<META content="MSHTML 6.00.2900.3132" name=GENERATOR></HEAD>
<BODY bgColor=#ffffff onload=sf()>
<TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD vAlign=top align=left><A href="http://www.google.com/codesearch"><IMG 
      height=55 alt="Go To Google Code Search Home" 
      src="Paginator_java_files/codesearch_logo_sm.gif" width=150 vspace=12 
      border=0></A></TD>
    <TD width=10></TD>
    <TD align=left><FONT size=-1>This is Google's cached copy of <CODE 
      class=fn>core/src/java/org/jahia/utils/pagination/Paginator.java</CODE> 
      from<BR><SPAN class=a><A 
      href="http://www.google.com/codesearch/url?hl=en&amp;q=show:6jwObt_1iY4:SES_MX_PT5c&amp;sa=N&amp;ct=rpc&amp;cs_p=http://svn.jahia.org/svn/jahia/trunk">http://www.google.com/codesearch/url?hl=en&amp;q=show:6jwObt_1iY4:SES_MX_PT5c&amp;sa=N&amp;ct=rpc&amp;cs_p=http://svn.jahia.org/svn/jahia/trunk</A></SPAN> 
      <BR><BR><I>Google is neither affiliated with the authors of this page nor 
      responsible for its content.</I></FONT></TD></TR>
  <TR height=10>
    <TD colSpan=3></TD></TR>
  <TR bgColor=#000000 height=1>
    <TD bgColor=#000000 colSpan=3></TD></TR></TBODY></TABLE><BR>
<TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD vAlign=top align=left colSpan=4><PRE><A href="http://www.google.com/codesearch?hl=en&amp;q=show:6jwObt_1iY4:SES_MX_PT5c&amp;sa=N&amp;ct=rdp&amp;cs_p=http://svn.jahia.org/svn/jahia/trunk">http://www.google.com/codesearch?hl=en&amp;q=show:6jwObt_1iY4:SES_MX_PT5c&amp;sa=N&amp;ct=rdp&amp;cs_p=http://svn.jahia.org/svn/jahia/trunk</A>/<A href="http://www.google.com/codesearch?hl=en&amp;q=show:JzGdvl3Qcq4:rjm1LA1VKHI&amp;sa=N&amp;ct=rdp&amp;cs_p=http://svn.jahia.org/svn/jahia/trunk&amp;cs_f=core">core</A>/<A href="http://www.google.com/codesearch?hl=en&amp;q=show:5U75KXluPx4:LajseuJzzRE&amp;sa=N&amp;ct=rdp&amp;cs_p=http://svn.jahia.org/svn/jahia/trunk&amp;cs_f=core/src">src</A>/<A href="http://www.google.com/codesearch?hl=en&amp;q=show:UgpBUFOSx9U:hP1quBYeWzU&amp;sa=N&amp;ct=rdp&amp;cs_p=http://svn.jahia.org/svn/jahia/trunk&amp;cs_f=core/src/java">java</A>/<A href="http://www.google.com/codesearch?hl=en&amp;q=show:ImYOCZLaKC0:xhZhtHFL9Y4&amp;sa=N&amp;ct=rdp&amp;cs_p=http://svn.jahia.org/svn/jahia/trunk&amp;cs_f=core/src/java/org">org</A>/<A href="http://www.google.com/codesearch?hl=en&amp;q=show:ukHEf8FOA-I:Rfk0whaTbvI&amp;sa=N&amp;ct=rdp&amp;cs_p=http://svn.jahia.org/svn/jahia/trunk&amp;cs_f=core/src/java/org/jahia">jahia</A>/<A href="http://www.google.com/codesearch?hl=en&amp;q=show:P0dnacYKr0c:EIBC-dLlkr0&amp;sa=N&amp;ct=rdp&amp;cs_p=http://svn.jahia.org/svn/jahia/trunk&amp;cs_f=core/src/java/org/jahia/utils">utils</A>/<A href="http://www.google.com/codesearch?hl=en&amp;q=show:W1qIJ5okBqo:V0jXWldda2A&amp;sa=N&amp;ct=rdp&amp;cs_p=http://svn.jahia.org/svn/jahia/trunk&amp;cs_f=core/src/java/org/jahia/utils/pagination">pagination</A>/</PRE></TD></TR>
  <TR>
    <TD>&nbsp;&nbsp;&nbsp;&nbsp;</TD>
    <TD vAlign=top align=left><PRE><A href="http://www.google.com/codesearch?hl=en&amp;q=show:7wBsGusVc78:W1qIJ5okBqo:snJEwreKJvI&amp;sa=N&amp;ct=rd&amp;cs_p=http://svn.jahia.org/svn/jahia/trunk&amp;cs_f=core/src/java/org/jahia/utils/pagination/PaginatableList.java">PaginatableList.java</A>
<A href="http://www.google.com/codesearch?hl=en&amp;q=show:41N1-spf32I:W1qIJ5okBqo:nMR6tuLvbk8&amp;sa=N&amp;ct=rd&amp;cs_p=http://svn.jahia.org/svn/jahia/trunk&amp;cs_f=core/src/java/org/jahia/utils/pagination/PaginatablePrebuiltList.java">PaginatablePrebuiltList.java</A>
<B>Paginator.java</B>
</PRE></TD>
    <TD>&nbsp;&nbsp;&nbsp;&nbsp;</TD>
    <TD vAlign=top align=left width="100%"><PRE><SPAN class=cc>/*
 * Copyright 2002-2006 Jahia Ltd
 *
 * Licensed under the JAHIA COMMON DEVELOPMENT AND DISTRIBUTION LICENSE (JCDDL),
 * Version 1.0 (the "License"), or (at your option) any later version; you may
 * not use this file except in compliance with the License. You should have
 * received a copy of the License along with this program; if not, you may obtain
 * a copy of the License at
 *
 *  http://www.jahia.org/license/
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</SPAN><SPAN class=cc>//</SPAN>
<SPAN class=cc>//  Paginator</SPAN>
<SPAN class=cc>//</SPAN>
<SPAN class=cc>//</SPAN>

package org.jahia.utils.pagination;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.jahia.utils.JahiaConsole;

<SPAN class=cc>/**
 * Paginates a list for partial display (i.e. showing only a window of the
 * list elements at a time).
 *
 * @author MJ
 */</SPAN>
public class Paginator
{

    <SPAN class=cc>/**
     * The context key used to add the total numbner of items in the list.
     */</SPAN>
    public static final String TOTAL_ITEMS = "totalItems";

    <SPAN class=cc>/**
     * The context key used to retrieve the current page number.
     */</SPAN>
    public static final String PAGE_KEY = "paginated_page";

    <SPAN class=cc>/**
     * The context key used to add the previous page number.
     */</SPAN>
    public static final String PREV_PAGE = "prevPage";

    <SPAN class=cc>/**
     * The context key used to add the current page number.
     */</SPAN>
    public static final String CUR_PAGE = "currentPage";

    <SPAN class=cc>/**
     * The context key used to add the next page number.
     */</SPAN>
    public static final String NEXT_PAGE = "nextPage";

    <SPAN class=cc>/**
     * The context key used to add the list of page numbers.
     */</SPAN>
    public static final String PAGES = "pages";

    <SPAN class=cc>/**
     * Handles paging of the list in cases where the list represents all
     * items avaliable.
     */</SPAN>
    public static List paginate (List                 items,
                                 int                  nbrItemsPerPage,
                                 HttpServletRequest   request,
                                 HttpServletResponse  response,
                                 HttpSession          session )
    {
        return paginate(items, items.size(), nbrItemsPerPage, request, response, session);
    }

    <SPAN class=cc>/**
     * Handles paging of the list in cases where there may be more items
     * total than are in the list (eg. if some items were filtered out
     * due to a query).
     */</SPAN>
    public static List paginate ( List                 items,
                                  int                  totalNbrItems,
                                  int                  nbrItemsPerPage,
                                  HttpServletRequest   request,
                                  HttpServletResponse  response,
                                  HttpSession          session )
    {
        session.setAttribute(TOTAL_ITEMS, new Integer(totalNbrItems));
        JahiaConsole.println("Paginator",  "totalNbrItems=" + totalNbrItems);

        if (totalNbrItems &gt; 0) {
            int nbrPages = getNbrPages(nbrItemsPerPage, totalNbrItems);
            JahiaConsole.println("Paginator",  "nbrPages=" + nbrPages);

            if (nbrPages &gt; 1) {
                int curPageNbr = getCurrentPageNbr(request, response, session, nbrPages);
                session.setAttribute(CUR_PAGE, new Integer(curPageNbr));

                <SPAN class=cc>// Create the page links.</SPAN>
                Integer[] pages = new Integer[nbrPages];
                for (int i = 0; i &lt; nbrPages; i++) {
                    pages[i] = new Integer(i + 1);
                }
                session.setAttribute(PAGES, pages);
                session.setAttribute(PREV_PAGE,
                            (curPageNbr &gt; 1 ?
                             new Integer(curPageNbr - 1) : null));
                session.setAttribute(NEXT_PAGE,
                            (curPageNbr &lt; nbrPages ?
                             new Integer(curPageNbr + 1) : null));

                <SPAN class=cc>// Get the subset of items to display.</SPAN>
                items = getPage(items, curPageNbr, nbrItemsPerPage);
            }
        }
        else
        {
            items = null;
        }

        return items;
    }

    <SPAN class=cc>/**
     * Returns a valid page number for the page to display.
     *
     * @param session  The session to pull the page number from.
     * @param nbrPages The highest possible page number.
     */</SPAN>
    private static final int getCurrentPageNbr ( HttpServletRequest   request,
                                                 HttpServletResponse  response,
                                                 HttpSession          session,
                                                 int                  nbrPages )
    {
        String page = request.getParameter(PAGE_KEY);
        int pgNbr = (page != null ? Integer.parseInt(page) : 1);
        if (pgNbr &lt; 1) {
            pgNbr = 1;
        } else if (pgNbr &gt; nbrPages) {
            pgNbr = nbrPages;
        }
        return pgNbr;
    }

    <SPAN class=cc>/**
     * Calculates the number of pages based on the number of items.
     *
     * @param nbrItemsPerPage The number of items to display per page.
     * @param nbrItems        The total number of items.
     * @return                The number of pages to display items on.
     */</SPAN>
    protected static final int getNbrPages (int nbrItemsPerPage, int nbrItems)
    {
        <SPAN class=cc>// The cast is to assure the division returns a float.</SPAN>
        return (int)Math.ceil((float)nbrItems / nbrItemsPerPage);
    }

    <SPAN class=cc>/**
     * Gets the sub list of items to display for the current page.
     *
     * @param items           The complete list of items.
     * @param pgNbr           The current page number.
     * @param nbrItemsPerPage The number of items to display per page.
     */</SPAN>
    protected static final List getPage (List items, int pgNbr,
                                       int nbrItemsPerPage)
    {
        return items.subList
            ((pgNbr - 1) * nbrItemsPerPage,
             Math.min(pgNbr * nbrItemsPerPage, items.size()));
    }

    <SPAN class=cc>/**
     * Quick and dirty function to take a type of thing being
     * searched for and turning it into an SQL regular expression.
     */</SPAN>
    protected static String makeSQLRegex(String type, String searchFor)
    {
        if (type == null) type = "Contains";
        if (type.equals("Contains") || type.equals("StartsWith"))
            searchFor = searchFor + "%";
        if (type.equals("Contains") || type.equals("EndsWith"))
            searchFor = "%" + searchFor;
        return searchFor;
    }
}
</PRE></TD></TR></TBODY></TABLE>
<TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR bgColor=#000000 height=1>
    <TD bgColor=#000000 colSpan=3></TD></TR>
  <TR height=10>
    <TD></TD></TR>
  <TR>
    <TD><FONT size=-1><CODE 
      class=fn>core/src/java/org/jahia/utils/pagination/Paginator.java</CODE> 
      from<BR><SPAN class=a><A 
      href="http://www.google.com/codesearch/url?hl=en&amp;q=show:6jwObt_1iY4:SES_MX_PT5c&amp;sa=N&amp;ct=rpc&amp;cs_p=http://svn.jahia.org/svn/jahia/trunk">http://www.google.com/codesearch/url?hl=en&amp;q=show:6jwObt_1iY4:SES_MX_PT5c&amp;sa=N&amp;ct=rpc&amp;cs_p=http://svn.jahia.org/svn/jahia/trunk</A></SPAN><BR><BR></FONT></TD></TR></TBODY></TABLE></BODY></HTML>
