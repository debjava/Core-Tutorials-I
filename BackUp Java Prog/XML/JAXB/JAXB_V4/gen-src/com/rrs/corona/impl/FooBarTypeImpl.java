//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-b16-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2006.02.19 at 11:52:33 PM IST 
//


package com.rrs.corona.impl;

public class FooBarTypeImpl implements com.rrs.corona.FooBarType, com.sun.xml.bind.JAXBObject, com.rrs.corona.impl.runtime.UnmarshallableObject, com.rrs.corona.impl.runtime.XMLSerializable, com.rrs.corona.impl.runtime.ValidatableObject
{

    protected boolean has_Value;
    protected int _Value;
    protected java.lang.String _Comment;
    protected java.lang.String _PhoneNumber;
    protected boolean has_Bool;
    protected boolean _Bool;
    protected java.lang.String _Zip;
    protected boolean has_Foo;
    protected int _Foo;
    protected boolean has_SpeedDial;
    protected int _SpeedDial;
    public final static java.lang.Class version = (com.rrs.corona.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (com.rrs.corona.FooBarType.class);
    }

    public int getValue() {
        return _Value;
    }

    public void setValue(int value) {
        _Value = value;
        has_Value = true;
    }

    public java.lang.String getComment() {
        return _Comment;
    }

    public void setComment(java.lang.String value) {
        _Comment = value;
    }

    public java.lang.String getPhoneNumber() {
        return _PhoneNumber;
    }

    public void setPhoneNumber(java.lang.String value) {
        _PhoneNumber = value;
    }

    public boolean isBool() {
        return _Bool;
    }

    public void setBool(boolean value) {
        _Bool = value;
        has_Bool = true;
    }

    public java.lang.String getZip() {
        return _Zip;
    }

    public void setZip(java.lang.String value) {
        _Zip = value;
    }

    public int getFoo() {
        return _Foo;
    }

    public void setFoo(int value) {
        _Foo = value;
        has_Foo = true;
    }

    public int getSpeedDial() {
        return _SpeedDial;
    }

    public void setSpeedDial(int value) {
        _SpeedDial = value;
        has_SpeedDial = true;
    }

    public com.rrs.corona.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.rrs.corona.impl.runtime.UnmarshallingContext context) {
        return new com.rrs.corona.impl.FooBarTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(com.rrs.corona.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (!has_Foo) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Foo"));
        }
        context.startElement("", "foo");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _Foo)), "Foo");
        } catch (java.lang.Exception e) {
            com.rrs.corona.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        if ((!has_SpeedDial)&&(_PhoneNumber!= null)) {
            context.startElement("", "phoneNumber");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _PhoneNumber), "PhoneNumber");
            } catch (java.lang.Exception e) {
                com.rrs.corona.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        } else {
            if (has_SpeedDial&&(_PhoneNumber == null)) {
                context.startElement("", "speedDial");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _SpeedDial)), "SpeedDial");
                } catch (java.lang.Exception e) {
                    com.rrs.corona.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
            }
        }
        if (((!has_Value)&&(_Comment == null))&&has_Bool) {
            context.startElement("", "bool");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _Bool)), "Bool");
            } catch (java.lang.Exception e) {
                com.rrs.corona.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        } else {
            if (((!has_Value)&&(_Comment!= null))&&(!has_Bool)) {
                context.startElement("", "comment");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(((java.lang.String) _Comment), "Comment");
                } catch (java.lang.Exception e) {
                    com.rrs.corona.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
            } else {
                if ((has_Value&&(_Comment == null))&&(!has_Bool)) {
                    context.startElement("", "value");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _Value)), "Value");
                    } catch (java.lang.Exception e) {
                        com.rrs.corona.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
            }
        }
    }

    public void serializeAttributes(com.rrs.corona.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (!has_Foo) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Foo"));
        }
        if (_Zip!= null) {
            context.startAttribute("", "zip");
            try {
                context.text(((java.lang.String) _Zip), "Zip");
            } catch (java.lang.Exception e) {
                com.rrs.corona.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
    }

    public void serializeURIs(com.rrs.corona.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (!has_Foo) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Foo"));
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (com.rrs.corona.FooBarType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\'com.sun.msv.grammar."
+"trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/gr"
+"ammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000s"
+"q\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLor"
+"g/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun"
+"/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000 com.sun.msv.datatype.xsd.In"
+"tType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedT"
+"ype\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/sun/msv/datatype/xsd/XSDa"
+"tatypeImpl;xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnam"
+"espaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0017L\u0000\nwhiteSpacet"
+"\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://"
+"www.w3.org/2001/XMLSchemat\u0000\u0003intsr\u00005com.sun.msv.datatype.xsd."
+"WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datat"
+"ype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000*com.sun.msv.data"
+"type.xsd.MaxInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatyp"
+"e.xsd.RangeFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\nlimitValuet\u0000\u0012Ljava/lang/Object"
+";xr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstraintFac"
+"et\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypeq\u0000~"
+"\u0000\u0013L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L"
+"\u0000\tfacetNameq\u0000~\u0000\u0017xq\u0000~\u0000\u0016ppq\u0000~\u0000\u001e\u0000\u0001sr\u0000*com.sun.msv.datatype.xsd."
+"MinInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000 ppq\u0000~\u0000\u001e\u0000\u0000sr\u0000!com.sun.msv.d"
+"atatype.xsd.LongType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0012q\u0000~\u0000\u001at\u0000\u0004longq\u0000~\u0000\u001esq\u0000~\u0000\u001f"
+"ppq\u0000~\u0000\u001e\u0000\u0001sq\u0000~\u0000&ppq\u0000~\u0000\u001e\u0000\u0000sr\u0000$com.sun.msv.datatype.xsd.Integer"
+"Type\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0012q\u0000~\u0000\u001at\u0000\u0007integerq\u0000~\u0000\u001esr\u0000,com.sun.msv.dat"
+"atype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun."
+"msv.datatype.xsd.DataTypeWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002"
+"\u0000\u0000xq\u0000~\u0000#ppq\u0000~\u0000\u001e\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.NumberType\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0014q\u0000~\u0000\u001at\u0000\u0007decimalq\u0000~\u0000\u001eq\u0000~\u00004t\u0000\u000efractionDigits\u0000\u0000\u0000\u0000q"
+"\u0000~\u0000.t\u0000\fminInclusivesr\u0000\u000ejava.lang.Long;\u008b\u00e4\u0090\u00cc\u008f#\u00df\u0002\u0000\u0001J\u0000\u0005valuexr\u0000\u0010"
+"java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xp\u0080\u0000\u0000\u0000\u0000\u0000\u0000\u0000q\u0000~\u0000.t\u0000\fmaxInclusivesq\u0000"
+"~\u00008\u007f\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ffq\u0000~\u0000)q\u0000~\u00007sr\u0000\u0011java.lang.Integer\u0012\u00e2\u00a0\u00a4\u00f7\u0081\u00878\u0002\u0000\u0001I\u0000\u0005valu"
+"exq\u0000~\u00009\u0080\u0000\u0000\u0000q\u0000~\u0000)q\u0000~\u0000;sq\u0000~\u0000=\u007f\u00ff\u00ff\u00ffsr\u00000com.sun.msv.grammar.Expre"
+"ssion$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.ut"
+"il.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0017L\u0000\fnamespaceURIq\u0000~\u0000"
+"\u0017xpq\u0000~\u0000\u001bq\u0000~\u0000\u001asr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000"
+"~\u0000\u0001ppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000"
+"~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\txq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000"
+"\u0005valuexp\u0000psq\u0000~\u0000\rppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0014q\u0000~\u0000\u001at\u0000\u0005QNameq\u0000~\u0000\u001eq\u0000~\u0000Asq\u0000~\u0000Bq\u0000~\u0000Mq\u0000~\u0000\u001asr\u0000#com."
+"sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0017L"
+"\u0000\fnamespaceURIq\u0000~\u0000\u0017xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instancesr\u00000"
+"com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"q\u0000~\u0000\u0003sq\u0000~\u0000H\u0001psq\u0000~\u0000Ot\u0000\u0003foot\u0000\u0000sq\u0000~\u0000Dppsq\u0000~\u0000\bpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\rp"
+"psr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwa"
+"ysValidxq\u0000~\u0000\u0014q\u0000~\u0000\u001at\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.Whit"
+"eSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001d\u0001q\u0000~\u0000Asq\u0000~\u0000Bq\u0000~\u0000`q\u0000"
+"~\u0000\u001asq\u0000~\u0000Dppsq\u0000~\u0000Fq\u0000~\u0000Ipq\u0000~\u0000Jq\u0000~\u0000Qq\u0000~\u0000Usq\u0000~\u0000Ot\u0000\u000bphoneNumberq\u0000"
+"~\u0000Ysq\u0000~\u0000\bpp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0010sq\u0000~\u0000Dppsq\u0000~\u0000Fq\u0000~\u0000Ipq\u0000~\u0000Jq\u0000~\u0000Qq\u0000~\u0000U"
+"sq\u0000~\u0000Ot\u0000\tspeedDialq\u0000~\u0000Ysq\u0000~\u0000Dppsq\u0000~\u0000Dppsq\u0000~\u0000\bpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000\rppsr\u0000$com.sun.msv.datatype.xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000"
+"\u0014q\u0000~\u0000\u001at\u0000\u0007booleanq\u0000~\u0000\u001eq\u0000~\u0000Asq\u0000~\u0000Bq\u0000~\u0000uq\u0000~\u0000\u001asq\u0000~\u0000Dppsq\u0000~\u0000Fq\u0000~\u0000"
+"Ipq\u0000~\u0000Jq\u0000~\u0000Qq\u0000~\u0000Usq\u0000~\u0000Ot\u0000\u0004boolq\u0000~\u0000Ysq\u0000~\u0000\bpp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000]sq\u0000"
+"~\u0000Dppsq\u0000~\u0000Fq\u0000~\u0000Ipq\u0000~\u0000Jq\u0000~\u0000Qq\u0000~\u0000Usq\u0000~\u0000Ot\u0000\u0007commentq\u0000~\u0000Ysq\u0000~\u0000\bp"
+"p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0010sq\u0000~\u0000Dppsq\u0000~\u0000Fq\u0000~\u0000Ipq\u0000~\u0000Jq\u0000~\u0000Qq\u0000~\u0000Usq\u0000~\u0000Ot\u0000\u0005v"
+"alueq\u0000~\u0000Ysq\u0000~\u0000Dppsq\u0000~\u0000Fq\u0000~\u0000Ipq\u0000~\u0000]sq\u0000~\u0000Ot\u0000\u0003zipq\u0000~\u0000Yq\u0000~\u0000Usr\u0000\""
+"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/L"
+"com/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun."
+"msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rs"
+"treamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;"
+"xp\u0000\u0000\u0000\u0013\u0001pq\u0000~\u0000Zq\u0000~\u0000\u0087q\u0000~\u0000qq\u0000~\u0000\fq\u0000~\u0000iq\u0000~\u0000\u0082q\u0000~\u0000Eq\u0000~\u0000dq\u0000~\u0000jq\u0000~\u0000wq\u0000"
+"~\u0000}q\u0000~\u0000\u0083q\u0000~\u0000\\q\u0000~\u0000|q\u0000~\u0000nq\u0000~\u0000\u0007q\u0000~\u0000\u0006q\u0000~\u0000oq\u0000~\u0000\u0005x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends com.rrs.corona.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(com.rrs.corona.impl.runtime.UnmarshallingContext context) {
            super(context, "-------------------");
        }

        protected Unmarshaller(com.rrs.corona.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return com.rrs.corona.impl.FooBarTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        if (("foo" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 4;
                            return ;
                        }
                        break;
                    case  9 :
                        if (("bool" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 15;
                            return ;
                        }
                        if (("comment" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 13;
                            return ;
                        }
                        if (("value" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 10;
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "zip");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  6 :
                        if (("phoneNumber" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 17;
                            return ;
                        }
                        if (("speedDial" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 7;
                            return ;
                        }
                        break;
                    case  12 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Zip = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  8 :
                        if (("speedDial" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  18 :
                        if (("phoneNumber" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  5 :
                        if (("foo" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  11 :
                        if (("value" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 12;
                            return ;
                        }
                        break;
                    case  14 :
                        if (("comment" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 12;
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "zip");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  12 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  16 :
                        if (("bool" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 12;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        if (("zip" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  12 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        attIdx = context.getAttribute("", "zip");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  12 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  2 :
                        if (("zip" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  15 :
                            state = 16;
                            eatText2(value);
                            return ;
                        case  10 :
                            state = 11;
                            eatText3(value);
                            return ;
                        case  4 :
                            state = 5;
                            eatText4(value);
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "zip");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText1(v);
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                        case  1 :
                            state = 2;
                            eatText1(value);
                            return ;
                        case  13 :
                            state = 14;
                            eatText5(value);
                            return ;
                        case  7 :
                            state = 8;
                            eatText6(value);
                            return ;
                        case  17 :
                            state = 18;
                            eatText7(value);
                            return ;
                        case  12 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Bool = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_Bool = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Value = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_Value = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Foo = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_Foo = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Comment = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _SpeedDial = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_SpeedDial = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText7(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PhoneNumber = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
